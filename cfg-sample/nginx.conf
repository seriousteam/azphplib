
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    
	upstream sas {
	    server 127.0.0.1:34343;
	    keepalive 64;
	}
	upstream php1 {
		server 127.0.0.1:10080;
	    keepalive 1;
	}
	upstream php2 {
	    server 127.0.0.1:10080;
	}
	upstream pdf {
	    server 127.0.0.1:9100;
	    keepalive 1;
	}


    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    #open_file_cache          max=1000  inactive=20s;
    open_file_cache       off;
    open_file_cache_errors   on;

    sendfile        on;
    directio        4m;

    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

	fastcgi_keep_conn on;
	proxy_http_version 1.1;
    
    server_tokens off;
    
	#proxy_cache_path /tmp/pcache levels= keys_zone=prx:16m inactive=1d max_size=1024m;
        #proxy_cache prx;
        #proxy_cache_valid 10m;
	
	#fastcgi_cache_path /tmp/fcache levels=1:2 keys_zone=fcg:32m inactive=1d max_size=2048m;
        #fastcgi_cache fcg;
        #fastcgi_cache_valid 10m;
	
	client_body_temp_path /tmp;
	proxy_temp_path  /tmp;
	fastcgi_temp_path /tmp;

            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

            proxy_connect_timeout      30;
            proxy_send_timeout         30;
            proxy_read_timeout         120;

            proxy_buffer_size          8k;
            proxy_buffers              8 64k;
            proxy_busy_buffers_size    64k;
            proxy_temp_file_write_size 128k;
	    
	    #proxy_cache_methods GET HEAD POST;
	    #proxy_cookie_domain
	    #proxy_cookie_path
	    #proxy_redirect
	    
	    #proxy_set_body /proxy_pass_request_body
	    #proxy_set_header /proxy_pass_request_headers
	    
	    fastcgi_buffer_size 8k;
	    fastcgi_buffers 8 64k;
	    fastcgi_busy_buffers_size 64k;
	    
	    #fastcgi_cache
	    #.... like proxy
	    
	    

        client_max_body_size       4m;
        client_body_buffer_size    64k;
	
	#client_header_timeout 30s; #60s-default
	#send_timeout

    server {
        listen       80;
        server_name  localhost;
        
		#server_name_in_redirect on; #?

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        root   ../html;
        
        

        location /stp.html {
        }

        location /tostop {
            rewrite ^.* /stp.html last;
        }

        
        location = /favicon.ico {
                log_not_found off;
                access_log off;
        }
 
        location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
        }

        location ~ \..*/.*\.php$ {
                return 403;
        }
        
        location /v2 {
            index  index.html;
        }

        location / {
                # This is cool because no php is touched for static content
                try_files $uri @rewrite;
                access_log logs/site-access.log;
                #index index.php index.html index.htm;
        }
        location @rewrite {
                # Some modules enforce no slash (/) at the end of the URL
                # Else this rewrite block wouldn't be needed (GlobalRedirect)
                rewrite ^/(.*)(/?)$ /index.php?q=$1&$args;
        }
        location /subsite {
                # This is cool because no php is touched for static content
                try_files $uri @rewrite2;
                access_log logs/site-access.log;
                #index index.php index.html index.htm;
        }
        location @rewrite2 {
                # Some modules enforce no slash (/) at the end of the URL
                # Else this rewrite block wouldn't be needed (GlobalRedirect)
                rewrite ^/v2site/(.*)(/?)$ /v2site/index.php?q=$1&$args;
        }
        
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php1$ {
            fastcgi_pass   php1;
            #fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
            #$fastcgi_script_name;
            include        fastcgi_params;
            access_log logs/fcgi-access.log;
        }
        location ~ \.php$ {
            proxy_pass   http://php2;
            access_log logs/fcgi-access.log;
        }

        location ~ \([0-9]+\)$ {
            rewrite ^(.*)\([0-9]+\)$ $1;
        }
		
		location /az/lib/ {
            proxy_pass http://213.208.189.135;
		}
	
        location /sys/ {
            proxy_pass http://sas;
            access_log logs/backend-access.log;

            #proxy_cache var;
            #proxy_cache_valid 10m;
        }

		location = /ais/logon {
			rewrite ^/ais/logon /ais/logon.php last;
		}
		
        location ~ /gen/.*\.pdf$ {
            rewrite   ^/gen/.*\.pdf /az/server/php/genpdf.php;
        }
        
        location = /qr {
            rewrite   ^/qr /sys/a/?target=genqr&qrscal=3&qreclvl=l&qrsrc=$args;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        location ~ /\.ht {
            deny  all;
        }
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
